/**
 * generated by Scrooge 3.1.1
 */
package com.twitter.mydemo.renamed

import com.twitter.scrooge.ThriftEnum


@javax.annotation.Generated(value = Array("com.twitter.scrooge.Compiler"), date = "2013-05-31T12:34:38.929+0100")
case object MarketStatus {
  
  case object Active extends MarketStatus {
    val value = 0
    val name = "Active"
  }

  /**
   * Find the enum by its integer value, as defined in the Thrift IDL.
   * @throws NoSuchElementException if the value is not found.
   */
  def apply(value: Int): MarketStatus = {
    value match {
      case 0 => Active
      case _ => throw new NoSuchElementException(value.toString)
    }
  }

  /**
   * Find the enum by its integer value, as defined in the Thrift IDL.
   * Returns None if the value is not found
   */
  def get(value: Int): Option[MarketStatus] = {
    value match {
      case 0 => scala.Some(Active)
      case _ => scala.None
    }
  }

  def valueOf(name: String): Option[MarketStatus] = {
    name.toLowerCase match {
      case "active" => scala.Some(MarketStatus.Active)
      case _ => scala.None
    }
  }
}



@javax.annotation.Generated(value = Array("com.twitter.scrooge.Compiler"), date = "2013-05-31T12:34:38.929+0100")
sealed trait MarketStatus extends ThriftEnum with Serializable