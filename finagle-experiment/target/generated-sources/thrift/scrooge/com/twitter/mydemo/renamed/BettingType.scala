/**
 * generated by Scrooge 3.1.1
 */
package com.twitter.mydemo.renamed

import com.twitter.scrooge.ThriftEnum

/*******************************************
 *********** DOMAIN DATA *******************
 ******************************************/
@javax.annotation.Generated(value = Array("com.twitter.scrooge.Compiler"), date = "2013-05-31T12:34:38.929+0100")
case object BettingType {
  
  case object Odds extends BettingType {
    val value = 0
    val name = "Odds"
  }

  /**
   * Find the enum by its integer value, as defined in the Thrift IDL.
   * @throws NoSuchElementException if the value is not found.
   */
  def apply(value: Int): BettingType = {
    value match {
      case 0 => Odds
      case _ => throw new NoSuchElementException(value.toString)
    }
  }

  /**
   * Find the enum by its integer value, as defined in the Thrift IDL.
   * Returns None if the value is not found
   */
  def get(value: Int): Option[BettingType] = {
    value match {
      case 0 => scala.Some(Odds)
      case _ => scala.None
    }
  }

  def valueOf(name: String): Option[BettingType] = {
    name.toLowerCase match {
      case "odds" => scala.Some(BettingType.Odds)
      case _ => scala.None
    }
  }
}


/*******************************************
 *********** DOMAIN DATA *******************
 ******************************************/
@javax.annotation.Generated(value = Array("com.twitter.scrooge.Compiler"), date = "2013-05-31T12:34:38.929+0100")
sealed trait BettingType extends ThriftEnum with Serializable